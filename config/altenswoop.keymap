/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define ZMK_MOUSE_SCRL_VAL 140

/ {
    behaviors {
        hm: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row mod tap/hold";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <170>;
            bindings = <&kp>, <&kp>;
        };

        hl: require_prior_idle2 {
            compatible = "zmk,behavior-hold-tap";
            label = "Home row layer mod tap/hold";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <170>;
            bindings = <&mo>, <&kp>;
        };

        inc_dec_msc: enc_key_press {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
            tap-ms = <20>;
        };
    };

    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 18>;
            layers = <0>;
        };

        dh {
            bindings = <&m_paren_quote>;
            key-positions = <12 15>;
            layers = <0>;
        };

        gh {
            bindings = <&kp MINUS>;
            key-positions = <14 15>;
            layers = <0>;
        };

        s, {
            bindings = <&m_lt_gt_left>;
            key-positions = <11 27>;
            layers = <0>;
        };
    };

    macros {
        m_a_grave: m_a_grave {
            compatible = "zmk,behavior-macro";
            label = "M_A_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp A>;
        };

        m_a_caret: m_a_caret {
            compatible = "zmk,behavior-macro";
            label = "M_A_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp A>;
        };

        m_e_cute: m_e_cute {
            compatible = "zmk,behavior-macro";
            label = "M_E_CUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
        };

        m_e_grave: m_e_grave {
            compatible = "zmk,behavior-macro";
            label = "M_E_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp E>;
        };

        m_e_caret: m_e_caret {
            compatible = "zmk,behavior-macro";
            label = "M_E_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp E>;
        };

        m_ou: m_ou {
            compatible = "zmk,behavior-macro";
            label = "M_OU";
            #binding-cells = <0>;
            bindings = <&kp O &kp LA(GRAVE) &kp U>;
        };

        m_u_caret: m_u_caret {
            compatible = "zmk,behavior-macro";
            label = "M_U_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp U>;
        };

        m_o_caret: m_o_caret {
            compatible = "zmk,behavior-macro";
            label = "M_O_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp O>;
        };

        m_paren_quote: m_paren_quote {
            compatible = "zmk,behavior-macro";
            label = "M_PAREN_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp DOUBLE_QUOTES>;
        };

        m_lt_gt_left: m_lt_gt_left {
            compatible = "zmk,behavior-macro";
            label = "M_LT_GT_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp Q       &kp W        &lt 4 E     &kp R               &kp T           &kp Y        &kp U               &lt 2 I     &kp O        &kp P
&hm LALT A  &hm LSHFT S  &hm LGUI D  &hm LEFT_CONTROL F  &hl 1 G         &hl 1 H      &hm LEFT_CONTROL J  &hm LCMD K  &hm LSHFT L  &hm LALT SEMI
&kp Z       &kp X        &kp C       &kp V               &kp B           &kp N        &kp M               &kp COMMA   &kp DOT      &kp FSLH
                         &mkp LCLK   &kp SPACE           &hl 3 ESCAPE    &hl 3 ENTER  &kp BACKSPACE       &kp C_PLAY
            >;

            sensor-bindings =
                <&inc_dec_msc MOVE_UP MOVE_DOWN>,
                <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        symbols {
            label = "SYMBOLS";
            bindings = <
&none   &kp LA(LS(N2))  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE     &kp LESS_THAN     &kp UNDER          &kp EQUAL      &kp HASH         &none
&kp AT  &kp DOLLAR      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE    &kp MINUS         &kp DOUBLE_QUOTES  &kp APOS       &kp ASTERISK     &kp PLUS
&none   &kp CARET       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE    &kp GREATER_THAN  &kp PERCENT        &kp AMPERSAND  &kp EXCLAMATION  &kp BACKSLASH
                        &none                 &trans                 &trans       &trans            &trans             &none
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp LG(LS(Z)) LG(Z)>;
        };

        french {
            label = "FRENCH";
            bindings = <
&none       &none       &m_e_cute  &m_e_grave  &none     &none   &m_ou       &none  &m_o_caret  &none
&m_a_grave  &m_a_caret  &none      &m_e_caret  &none     &none   &m_u_caret  &none  &none       &none
&none       &none       &kp LA(C)  &none       &none     &none   &none       &none  &none       &none
                        &none      &trans      &trans    &trans  &trans      &none
            >;

            sensor-bindings = <&inc_dec_kp F24 F24>, <&inc_dec_kp F24 F24>;
        };

        navigation {
            label = "NAV";
            bindings = <
&kp F1        &kp F2          &kp F3        &kp F4            &kp F5    &kp F7        &kp F8        &kp F9        &kp F10    &kp F12
&kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_GUI  &kp LEFT_CONTROL  &kp F6    &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT  &none
&bootloader   &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1      &none     &out OUT_TOG  &bt BT_SEL 2  &bt BT_SEL 3  &none      &bootloader
                              &none         &trans            &trans    &kp TAB       &kp DELETE    &none
            >;

            sensor-bindings =
                <&inc_dec_kp LG(RIGHT) LG(LEFT)>,
                <&inc_dec_kp TAB LS(TAB)>;
        };

        numpad {
            bindings = <
&none  &none  &none  &kp K      &none     &kp DOT       &kp N7  &kp N8  &kp N9  &kp STAR
&none  &none  &none  &kp J      &none     &kp MINUS     &kp N4  &kp N5  &kp N6  &kp PLUS
&none  &none  &none  &none      &none     &kp NUMBER_0  &kp N1  &kp N2  &kp N3  &kp FSLH
              &none  &kp LS(G)  &trans    &trans        &trans  &none
            >;

            label = "NUM";
            sensor-bindings = <&inc_dec_kp F24 F24>, <&inc_dec_kp F15 F14>;
        };
    };
};
